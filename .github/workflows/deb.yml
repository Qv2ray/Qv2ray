name: Qv2ray build debian package

on:
  push:
    branches:
      - dev
  release:
    types: [prereleased]
  workflow_dispatch:


# unsafe {
env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
# }

jobs:
  check_commit_msg:
    outputs:
      commit_message: ${{ steps.get_message.outputs.message }}
    name: Check if the workflow has been disabled.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get commit message
        id: get_message
        run: |
          echo "::set-output name=message::$(git log --format=%B -n 1 ${{ github.event.after }} | tr '\n' ' ')"
          echo "message=\"$(git log --format=%B -n 1 ${{ github.event.after }} | tr '\n' ' ')\"" >> $GITHUB_ENV

  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - distro: stable
            container: debian:stable
          - distro: unstable
            container: debian:unstable
          - distro: jammy
            container: ubuntu:jammy
    needs: check_commit_msg
    if: ${{ !contains( needs.check_commit_msg.outputs.commit_message, '!DEB') }}
    name: Build debian package for ${{ matrix.distro }}
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    env:
      DEBIAN_FRONTEND: noninteractive

    steps:
      - name: Install git
        run: |
          apt-get update
          apt-get install -y git
      - name: Checking out sources
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Install build dependencies
        run: |
          apt-get install -y build-essential devscripts debhelper ninja-build libgrpc++-dev libprotobuf-dev protobuf-compiler-grpc qtbase5-dev qttools5-dev cmake pkg-config qtdeclarative5-dev libcurl4-openssl-dev libqt5svg5-dev
      - name: Patching source code
        if: matrix.distro == 'stable'
        run: |
          patch -p1 < debian/0001-add-missing-macro.patch
      - name: Bump version
        if: github.event_name != 'release'
        run: |
          dch -v "$(date +'%Y%m%d%H%M%S')-1" -D unstable -m 'Automatic build'
      - name: Build
        run: |
          dch -l${{ matrix.distro }} -m 'Build against ${{ matrix.distro }}' -D ${{ matrix.distro }}
          dpkg-buildpackage -us -uc -i -b
      - name: Copy binary
        run: |
          cp ../qv2ray_*.deb ./
      - name: Get package name
        id: get_package
        run: echo ::set-output name=NAME::$(basename qv2ray_*.deb)
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.distro }}
          path: ${{ steps.get_package.outputs.NAME }}

  build-cross:
    strategy:
      fail-fast: false
      matrix:
        distro: [stable]
        arch: [arm64, armhf, mips64el]
    needs: check_commit_msg
    if: ${{ !contains( needs.check_commit_msg.outputs.commit_message, '!DEB') }}
    name: Build debian package for ${{ matrix.distro }} ${{ matrix.arch }}
    runs-on: ubuntu-latest
    container: debian:${{ matrix.distro }}
    env:
      DEBIAN_FRONTEND: noninteractive

    steps:
      - name: Install git
        run: |
          apt-get update
          apt-get install -y git
      - name: Checking out sources
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Install build dependencies
        run: |
          dpkg --add-architecture ${{ matrix.arch }}
          apt-get update
          apt-get install -o APT::Immediate-Configure=0 -y build-essential crossbuild-essential-${{ matrix.arch }} devscripts debhelper ninja-build libgrpc++-dev:${{ matrix.arch }} libprotobuf-dev:${{ matrix.arch }} protobuf-compiler-grpc qtbase5-dev:${{ matrix.arch }} qttools5-dev:${{ matrix.arch }} cmake pkg-config qtdeclarative5-dev:${{ matrix.arch }} libcurl4-openssl-dev:${{ matrix.arch }} libqt5svg5-dev:${{ matrix.arch }}
      - name: Patching source code
        if: matrix.distro == 'stable'
        run: |
          patch -p1 < debian/0001-add-missing-macro.patch
      - name: Bump version
        if: github.event_name != 'release'
        run: |
          dch -v "$(date +'%Y%m%d%H%M%S')-1" -D unstable -m 'Automatic build'
      - name: Build
        run: |
          dch -l${{ matrix.distro }} -m 'Build against ${{ matrix.distro }}' -D ${{ matrix.distro }}
          dpkg-buildpackage -a${{ matrix.arch }} -us -uc -i -b -d
      - name: Copy binary
        run: |
          cp ../qv2ray_*.deb ./
      - name: Get package name
        id: get_package
        run: echo ::set-output name=NAME::$(basename qv2ray_*.deb)
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.distro }}-${{ matrix.arch }}
          path: ${{ steps.get_package.outputs.NAME }}

  upload:
    needs: [check_commit_msg, build, build-cross]
    if: ${{ always() }} && ${{ !contains( needs.check_commit_msg.outputs.commit_message, 'NO_DEB') }}
    name: Upload debian packages
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          path: packages
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.DEBIAN_REPO_TOKEN }}
      - name: Preparing
        run: |
          sudo apt-get install reprepro
          echo ${{ secrets.DEBIAN_REPO_KEY }} | base64 -d > private.key
          gpg --import private.key
      - name: Setup Repository (development branch)
        if: github.event_name != 'release'
        run: |
          git clone git@github.com:Qv2ray/debian-dev.git
          cd debian-dev
          git config --local user.name "${{ github.actor }}"
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          reprepro --delete clearvanished
          find $GITHUB_WORKSPACE/packages -type f -name *.deb -exec bash -c 'reprepro includedeb $(echo "$1" | grep -Po "(?<=-1).*(?=1_)") "$1"' bash {} \;
          git add -A
          git commit -am 'update'
          git push origin master
