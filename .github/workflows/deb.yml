name: Qv2ray build debian package

on:
  push:
  release:
    types: [prereleased]

jobs:
  check_commit_msg:
    outputs:
      commit_message: ${{ steps.get_message.outputs.message }}
    name: Check if the workflow has been disabled.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get commit message
        id: get_message
        run: |
          echo "::set-output name=message::$(git log --format=%B -n 1 ${{ github.event.after }})"
          echo "message=\"$(git log --format=%B -n 1 ${{ github.event.after }})\"" >> $GITHUB_ENV

  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - distro: stable
            container: debian:stable
          - distro: unstable
            container: debian:unstable
          - distro: groovy
            container: ubuntu:groovy
          - distro: focal
            container: ubuntu:focal
    needs: check_commit_msg
    if: ${{ !contains( needs.check_commit_msg.outputs.commit_message, 'NO_DEB') }}
    name: Build debian package for ${{ matrix.distro }}
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    env:
      DEBIAN_FRONTEND: noninteractive

    steps:
      - name: Install git
        run: |
          apt-get update
          apt-get install -y git
      - name: Checking out sources
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Install build dependencies
        run: |
          apt-get install -y build-essential devscripts reprepro debhelper ninja-build libgrpc++-dev libprotobuf-dev protobuf-compiler-grpc qtbase5-dev qttools5-dev cmake pkg-config qtdeclarative5-dev libcurl4-openssl-dev libqt5svg5-dev
      - name: Build
        run: |
          dch -l${{ matrix.distro }} -m 'Build against ${{ matrix.distro }}' -D ${{ matrix.distro }}
          dpkg-buildpackage -us -uc -i -b
      - name: Copy binary
        run: |
          cp ../qv2ray_*.deb ./
      - name: Get package name
        id: get_package
        run: echo ::set-output name=NAME::$(basename qv2ray_*.deb)
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.get_package.outputs.NAME }}
          path: ${{ steps.get_package.outputs.NAME }}

  upload:
    needs: [check_commit_msg, build]
    if: ${{ !contains( needs.check_commit_msg.outputs.commit_message, 'NO_DEB') }}
    name: Upload debian packages
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          path: packages
      - name: Setup Repository
        if: github.event_name == 'release' && !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc') && !contains(github.ref, 'pre')
        run: |
          git clone https://github.com/Qv2ray/debian.git
          echo ${{ secrets.DEBIAN_REPO_KEY }} | base64 -d > private.key
          gpg --import private.key
          cd debian
          git config --local user.name "${{ github.actor }}"
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git remote set-url origin https://${{ github.actor }}:${{ secrets.DEBIAN_REPO_TOKEN }}@github.com/Qv2ray/debian.git
          reprepro includedeb stable $GITHUB_WORKSPACE/packages/*stable*.deb
          reprepro includedeb unstable $GITHUB_WORKSPACE/packages/*unstable*.deb
          reprepro includedeb focal $GITHUB_WORKSPACE/packages/*focal*.deb
          reprepro includedeb groovy $GITHUB_WORKSPACE/packages/*groovy*.deb
          git add -A
          git commit -am 'update'
          git push origin master
