name: Qv2ray Windows Installer

on: 
  push:
  release:
    types: [prereleased]

jobs:
  build:
    strategy:
      matrix:
        qt_version: [5.14.2]
        platform: [windows-latest]
        arch: [x86, x64]
        include: 
          - platform: windows-latest
            arch: x86
            qtarch: win32_msvc2017
          - platform: windows-latest
            arch: x64
            qtarch: win64_msvc2017_64
      fail-fast: false
        
    runs-on: ${{ matrix.platform }}
    env:
      _QV2RAY_BUILD_INFO_: "Qv2ray built from Github Action"
      _QV2RAY_BUILD_EXTRA_INFO_: "qt${{ matrix.qt_version }}-${{ github.sha }}-ci.${{ matrix.platform }}"
    
    steps:
      - name: Get the version
        id: get_version
        shell: bash
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Checking out sources
        uses: actions/checkout@master
      - name: Install Python 3.7 version
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
          architecture: ${{ matrix.arch }}
      - name: Restoring submodules
        run: git submodule update --init
# =========================================================================================================
      - name: Install MSVC compiler
        uses: ilammy/msvc-dev-cmd@v1
        with: 
          # 14.1 is for vs2017, 14.2 is vs2019, following the upstream vcpkg build from Qv2ray-deps repo
          toolset: 14.2
          arch: ${{ matrix.arch }}
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: QtCache-${{ matrix.platform }}-${{ matrix.arch }}-${{ matrix.qt_version }}
      - name: Installing Qt - ${{ matrix.arch }}
        uses: jurplel/install-qt-action@v2.5.0
        with:
          version: ${{ matrix.qt_version }}
          arch: ${{ matrix.qtarch }}
          mirror: 'http://mirrors.ocf.berkeley.edu/qt/'
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
# =========================================================================================================
      - name: Win-${{ matrix.arch }} - ${{ matrix.qt_version }} - Build preparation - Download Dependencies
        shell: bash
        run: |
         choco install -y ninja
         curl -o ./libs/Qv2ray-deps-grpc-${{ matrix.arch }}-windows.7z -L https://github.com/Qv2ray/Qv2ray-deps/releases/download/release/Qv2ray-deps-grpc-${{ matrix.arch }}-windows.7z
      - name: Win-${{ matrix.arch }} - Build preparation - Extract Dependencies
        uses: DuckSoft/extract-7z-action@v1.0
        with:
          pathSource: ./libs/Qv2ray-deps-grpc-${{ matrix.arch }}-windows.7z
          pathTarget: ./libs
# ========================================================================================================= Generate MakeFile and Build
      - name: Win-${{ matrix.arch }} - ${{ matrix.qt_version }} - Generate Dependencies and Build
        shell: bash
        env:
          CC: cl.exe
          CXX: cl.exe
        run: |
          mkdir build
          cd build
          cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release -DBUILD_NSIS=ON
          cmake --build . --target package --parallel $(nproc)
      - name: Windows - Get package name
        shell: bash
        id: get_package
        run: |
          echo ::set-output name=NAME::$(basename build/qv2ray-*.exe)
      - name: Win-${{ matrix.arch }} - ${{ matrix.qt_version }} - uploading artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ steps.get_package.outputs.NAME }}
          path: build/${{ steps.get_package.outputs.NAME }}
      - name: Win-${{ matrix.arch }} - ${{ matrix.qt_version }} - Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/${{ steps.get_package.outputs.NAME }}
          asset_name: ${{ steps.get_package.outputs.NAME }}
          tag: ${{ github.ref }}
          overwrite: true
