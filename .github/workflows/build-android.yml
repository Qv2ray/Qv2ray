name: Build Android APK

on:
  push:
    branches-ignore:
      - l10n_dev

jobs:
  check_commit_msg:
    outputs:
      commit_message: ${{ steps.get_message.outputs.message }}
    name: Check if the workflow has been disabled.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get commit message
        id: get_message
        run: |
          echo "::set-output name=message::$(git log --format=%B -n 1 ${{ github.event.after }} | tr '\n' ' ')"
          echo "message=\"$(git log --format=%B -n 1 ${{ github.event.after }} | tr '\n' ' ')\"" >> $GITHUB_ENV

  build:
    needs: check_commit_msg
    if: ${{ !contains( needs.check_commit_msg.outputs.commit_message, '!APK') }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        buildtype: [Debug, Release]
        arch: [x86, x86_64, arm, arm64]
        qt_version: [6.0.1]
        include:
          - arch: x86
            qt_arch: android_x86
          - arch: x86_64
            qt_arch: android_x86_64
          - arch: arm
            qt_arch: android_armv7
          - arch: arm64
            qt_arch: android_arm64_v8a
          - buildtype: Debug
            lowercase_buildtype: debug
          - buildtype: Release
            lowercase_buildtype: release

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: QtCache-${{ matrix.buildtype }}-${{ matrix.arch }}-${{ matrix.qt_version }}

    - name: Installing Qt - ${{ matrix.qt_arch }}
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt_version }}
        target: android
        arch: ${{ matrix.qt_arch }}
        aqtversion: '==1.0.0'
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        extra: '-b http://mirrors.ocf.berkeley.edu/qt/'

    - name: Installing Qt Host - ${{ matrix.qt_arch }}
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt_version }}
        target: desktop
        set-env: false
        aqtversion: '==1.0.0'
        extra: '-b http://mirrors.ocf.berkeley.edu/qt/'

    - name: Download Dependencies
      run: |
        sudo apt install -y ninja-build
        cd ./libs
        ./setup-libs.sh android ${{ matrix.arch }}
        ./setup-libs.sh linux tools

    - name: Build Qv2ray
      run: |
        cd 3rdparty
        git clone https://github.com/KDAB/android_openssl
        cd ..
        mkdir build
        cd build
        sed -i "s,/home/qt/work/install,/home/runner/work/Qv2ray/Qt/6.0.1/gcc_64,g" $Qt6_DIR/lib/cmake/Qt6/qt.toolchain.cmake
        $Qt6_DIR/bin/qt-cmake -GNinja \
          -DCMAKE_BUILD_TYPE=${{ matrix.buildtype }} \
          -DANDROID_SDK_ROOT=$ANDROID_SDK_ROOT \
          -DANDROID_NDK_ROOT=$ANDROID_NDK_ROOT ..
        cmake --build . --parallel $(nproc) --target apk
    - name: Build APK
      if: false
      run: |
        cd build/
        androiddeployqt --output ./android-build/ --input ./android_deployment_settings.json --${{ matrix.lowercase_buildtype }}
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Qv2ray.${{ github.sha }}.Android-${{ matrix.arch }}.qt${{ matrix.qt_version }}-${{ matrix.buildtype }}.zip
        path: build/android-build/build/outputs/apk/${{ matrix.lowercase_buildtype }}/
