name: Qv2ray build matrix

on: 
  push:
  release:
    types: [prereleased]

jobs:
  x64-build:
    strategy:
      matrix:
        platform: [ubuntu-16.04, macos-latest, windows-latest]
        qt_version: [5.12.6, 5.13.2, 5.14.1]
      fail-fast: false
        
    runs-on: ${{ matrix.platform }}
    
    steps:
      - name: Checking out sources
        uses: actions/checkout@master
      - name: Restoring submodules
        run: git submodule update --init
# --------------------------------------------------------
      - name: Install MSVC compiler
        if: matrix.platform == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1
        with: 
          # 14.1 is for vs2017
          toolset: 14.2
      - name: Installing Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_version }}
# --------------------------------------------------------
      - name: Linux - Install Packages 
        if: matrix.platform == 'ubuntu-16.04'
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo add-apt-repository ppa:webispy/grpc
          sudo add-apt-repository ppa:carsten-uppenbrink-net/openssl
          sudo apt update
          sudo apt install -y gcc-7 libgl-dev openssl libx11-dev libxkbcommon-x11-dev libprotobuf-dev protobuf-compiler protobuf-c-compiler

      - name: macOS - Install Packages
        if: matrix.platform == 'macos-latest'
        run: brew install protobuf
# --------------------------------------------------------
      - name: Cross-platform - Download libraries
        shell: bash
        run: |
         curl -o ./libs/libqvb-linux64.a -L https://github.com/Qv2ray/QvRPCBridge/releases/download/v1.1/libqvb-linux64.a
         curl -o ./libs/libqvb-darwin.a -L https://github.com/Qv2ray/QvRPCBridge/releases/download/v1.1/libqvb-darwin.a
         curl -o ./libs/Qv2ray-deps-x64-windows.7z -L https://github.com/Qv2ray/Qv2ray-deps/releases/download/release/Qv2ray-deps-x64-windows.7z
      - name: Win64 - ${{ matrix.qt_version }} - Extract Windows Dependencies
        if: matrix.platform == 'windows-latest'
        uses: DuckSoft/extract-7z-action@v1.0
        with:
          pathSource: ./libs/Qv2ray-deps-x64-windows.7z
          pathTarget: ./libs
# -------------------------------------------------------- Generate MakeFile
      - name: Cross-platform - ${{ matrix.qt_version }} - Generate Dependencies and Makefile
        shell: bash
        run: |
          PATH=$PATH:$Qt5_Dir
          mkdir build
          cd build
          export _QV2RAY_BUILD_INFO_="Qv2ray built from Github Action"  
          export _QV2RAY_BUILD_EXTRA_INFO_="qt${{ matrix.qt_version }}-${{ github.sha }}"
          qmake .. CONFIG+=no_increase_build_number PREFIX=/usr
# -------------------------------------------------------- Build
      - name: Cross-platform - ${{ matrix.qt_version }} - Build Qv2ray
        shell: bash
        run: |
          cd build
          _make=$([ "${{ matrix.platform }}" == "windows-latest" ] && echo "nmake" || echo "make -j2")
          $_make $([ "${{ matrix.platform }}" == "ubuntu-16.04" ] && echo "CC=gcc-7 CXX=g++-7" LINK="g++-7" || echo "")
# -------------------------------------------------------- Deployments
      - name: Linux - ${{ matrix.qt_version }} - Generating AppImage
        if: matrix.platform == 'ubuntu-16.04'
        run: | 
          cd build
          make install INSTALL_ROOT=AppDir
          cd AppDir
          mkdir -p ./usr/lib/
          cp /usr/lib/x86_64-linux-gnu/libssl.so.1.1 /usr/lib/x86_64-linux-gnu/libcrypto.so.1.1 ./usr/lib/ 
          cd ..
          wget https://github.com/probonopd/linuxdeployqt/releases/download/6/linuxdeployqt-6-x86_64.AppImage
          chmod +x ./linuxdeployqt-6-x86_64.AppImage
          ./linuxdeployqt-6-x86_64.AppImage --appimage-extract 
          cd AppDir
          ../squashfs-root/AppRun usr/share/applications/qv2ray.desktop -appimage -no-strip -always-overwrite
          mv ./Qv2ray*.AppImage ./Qv2ray.AppImage
      - name: Linux - ${{ matrix.qt_version }} - Uploading artifact
        if: matrix.platform == 'ubuntu-16.04'
        uses: actions/upload-artifact@master
        with:
          name: Qv2ray.linux-qt${{ matrix.qt_version }}.AppImage
          path: build/AppDir/Qv2ray.AppImage
      - name: Linux - ${{ matrix.qt_version }} - Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        if: github.event_name == 'release' && matrix.platform == 'ubuntu-16.04' && matrix.qt_version == '5.12.6'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/AppDir/Qv2ray.AppImage
          asset_name: Qv2ray-${{ github.ref }}-linux-qt${{ matrix.qt_version }}.AppImage
          tag: ${{ github.ref }}
          overwrite: true
# ==
      - name: macOS - ${{ matrix.qt_version }} - Making release tarball
        if: matrix.platform == 'macos-latest'
        run: |
          cd build
          cd qv2ray.app
          macdeployqt ./
          cd ..
          tar czf Qv2ray.app.tar.gz qv2ray.app
      - name: macOS - ${{ matrix.qt_version }} - Uploading Artifact
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@master
        with:
          name: Qv2ray.macOS.app-qt${{ matrix.qt_version }}.zip
          path: build/Qv2ray.app.tar.gz
      - name: macOS - ${{ matrix.qt_version }} - Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        if: github.event_name == 'release' && matrix.platform == 'macos-latest' && matrix.qt_version == '5.12.6'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/Qv2ray.app.tar.gz
          asset_name: Qv2ray-${{ github.ref }}-macOS-qt${{ matrix.qt_version }}.tar.gz
          tag: ${{ github.ref }}
          overwrite: true
# ==
      - name: Win64 - ${{ matrix.qt_version }} - Copying DLLs to build output folders
        if: matrix.platform == 'windows-latest'
        run: .\.github\workflows\copy_DLLs.bat
      - name: Win64 - ${{ matrix.qt_version }} - Running windeployqt
        if: matrix.platform == 'windows-latest'
        shell: cmd
        run: |
          cd build
          cd release
          del *.cpp *.h *.o *.qrc *.qm *.hpp
          windeployqt ./qv2ray.exe --compiler-runtime
      - name: Win64 - ${{ matrix.qt_version }} - Create 7z Release
        if: matrix.platform == 'windows-latest'
        uses: DuckSoft/create-7z-action@v1.0
        with:
          pathSource: ./build/release/
          pathTarget: ./release.7z
      - name: Win64 - ${{ matrix.qt_version }} - Uploading artifact
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@master
        with:
          name: Qv2ray.Win64-qt${{ matrix.qt_version }}.7z
          path: release.7z
      - name: Win64 - ${{ matrix.qt_version }} - Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        if: github.event_name == 'release' && matrix.qt_version == '5.12.6' && matrix.platform == 'windows-latest'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release.7z
          asset_name: Qv2ray-${{ github.ref }}-win64-qt${{ matrix.qt_version }}.7z
          tag: ${{ github.ref }}
          overwrite: true
# -
# =================================================================================================================
# -
  x86-build:
    strategy:
      matrix:
        qt_version: [5.12.6, 5.13.2]
      fail-fast: false
        
    runs-on: windows-latest
    
    steps:
      - name: Checking out sources
        uses: actions/checkout@master
      - name: Restoring submodules
        run: git submodule update --init
# --------------------------------------------------------
      - name: Install MSVC compiler
        uses: ilammy/msvc-dev-cmd@v1
        with: 
          # 14.1 is for vs2017
          toolset: 14.2
          arch: x86
      - name: Installing Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_version }}
          arch: win32_msvc2017
      - name: Cross-platform - Download libraries
        shell: bash
        run: |
         curl -o ./libs/Qv2ray-deps-x86-windows.7z -L https://github.com/Qv2ray/Qv2ray-deps/releases/download/release/Qv2ray-deps-x86-windows.7z
      - name: Win32 - ${{ matrix.qt_version }} - Extract Windows Dependencies
        uses: DuckSoft/extract-7z-action@v1.0
        with:
          pathSource: ./libs/Qv2ray-deps-x86-windows.7z
          pathTarget: ./libs
# -------------------------------------------------------- Generate MakeFile
      - name: Cross-platform - ${{ matrix.qt_version }} - Generate Dependencies and Makefile
        shell: bash
        run: |
          PATH=$PATH:$Qt5_Dir
          mkdir build
          cd build
          export _QV2RAY_BUILD_INFO_="Qv2ray built from Github Action"  
          export _QV2RAY_BUILD_EXTRA_INFO_="qt${{ matrix.qt_version }}-${{ github.sha }}"
          qmake .. CONFIG+=no_increase_build_number
# -------------------------------------------------------- Build
      - name: Cross-platform - ${{ matrix.qt_version }} - Build Qv2ray
        shell: bash
        run: |
          cd build
          nmake
# -------------------------------------------------------- Deployments
      - name: Win64 - ${{ matrix.qt_version }} - Copying DLLs to build output folders
        run: .\.github\workflows\copy_DLLs.bat
      - name: Win32 - ${{ matrix.qt_version }} - Running windeployqt
        shell: cmd
        run: |
          cd build
          cd release
          del *.cpp *.h *.o *.qrc *.qm *.hpp
          windeployqt ./qv2ray.exe --compiler-runtime
      - name: Win32 - ${{ matrix.qt_version }} - Create 7z Release
        uses: DuckSoft/create-7z-action@v1.0
        with:
          pathSource: ./build/release/
          pathTarget: ./release.7z
      - name: Win32 - ${{ matrix.qt_version }} - Uploading artifact
        uses: actions/upload-artifact@master
        with:
          name: Qv2ray.Win32-qt${{ matrix.qt_version }}.7z
          path: release.7z
      - name: Win32 - ${{ matrix.qt_version }} - Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        if: github.event_name == 'release' && matrix.qt_version == '5.12.6'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release.7z
          asset_name: Qv2ray-${{ github.ref }}-win32-qt${{ matrix.qt_version }}.7z
          tag: ${{ github.ref }}
          overwrite: true
# -------------------------------------
