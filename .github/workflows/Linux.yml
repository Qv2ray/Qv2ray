name: Qv2ray Push Build for Linux

on: 
  push:
  release:
    types: [prereleased]

jobs:
# =================================================================================== LINUX
  Linux:
    name: Push build for Linux
    runs-on: ubuntu-16.04
    steps:
      - name: Checking out sources
        uses: actions/checkout@master
      - name: Restoring submodules
        run: git submodule update --init
# --------------------------------------------------------
      - name: Installing Qt
        uses: jurplel/install-qt-action@v2
        with:
          modules: qtcharts
# --------------------------------------------------------
      - name: Install Packages 
        run: |
          sudo add-apt-repository ppa:webispy/grpc
          sudo add-apt-repository ppa:carsten-uppenbrink-net/openssl
          sudo apt update
          sudo apt install -y libgl-dev openssl libx11-dev libxkbcommon-x11-dev libgrpc++-dev libprotobuf-dev protobuf-compiler protobuf-c-compiler protobuf-compiler-grpc
# --------------------------------------------------------
      - name: Extracting gRPC and protobuf libs and headers
        run: tools/grpc_gen.sh
# --------------------------------------------------------
      - name: Download libqvb static library.
        uses: Legion2/download-release-action@v2.1.0
        with:
          repository: Qv2ray/QvRPCBridge
          tag: 'latest'
          path: libs
          file: libqvb-linux64.a
# -------------------------------------------------------- libqvb build
      - name: libqvb - Build Qv2ray
        run: |
          mkdir build
          cd build
          qmake .. CONFIG+=no_increase_build_number CONFIG+=with_new_backend PREFIX=/usr
          make -j2
      - name: libqvb - Generating filesystem structure for AppImage
        run: | 
          cd build
          make install INSTALL_ROOT=AppDir
          cd AppDir
          mkdir -p ./usr/lib/
          cp /usr/lib/x86_64-linux-gnu/libssl.so.1.1 /usr/lib/x86_64-linux-gnu/libcrypto.so.1.1 ./usr/lib/ 
      - name: libqvb - Building AppImage using linuxdeployqt
        run: |
          cd build
          wget https://github.com/probonopd/linuxdeployqt/releases/download/6/linuxdeployqt-6-x86_64.AppImage
          chmod +x ./linuxdeployqt-6-x86_64.AppImage
          ./linuxdeployqt-6-x86_64.AppImage --appimage-extract 
          cd AppDir
          ../squashfs-root/AppRun usr/share/applications/qv2ray.desktop -appimage -no-strip -always-overwrite
          mv ./Qv2ray*.AppImage ./Qv2ray.AppImage
      - name: libqvb - Uploading artifact
        uses: actions/upload-artifact@master
        with:
          name: Qv2ray.linux-libqvb.AppImage
          path: build/AppDir/Qv2ray.AppImage
      - name: libqvb - Upload binaries to release
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/AppDir/Qv2ray.AppImage
          asset_name: Qv2ray-${{ github.ref }}-linux-libqvb.AppImage
          tag: ${{ github.ref }}
          overwrite: true
# -------------------------------------------------------- cleanup build
      - name: cleanup -- clean up build directory to build against legacy gRPC
        run: rm -rvf ./build
# -------------------------------------------------------- gRPC build
      - name: gRPC - Build Qv2ray
        run: |
          mkdir build
          cd build
          qmake .. CONFIG+=no_increase_build_number PREFIX=/usr
          make -j2
      - name: gRPC - Generating filesystem structure for AppImage
        run: | 
          cd build
          make install INSTALL_ROOT=AppDir
          cd AppDir
          mkdir -p ./usr/lib/
          cp /usr/lib/x86_64-linux-gnu/libssl.so.1.1 /usr/lib/x86_64-linux-gnu/libcrypto.so.1.1 ./usr/lib/ 
      - name: gRPC - Building AppImage using linuxdeployqt
        run: |
          cd build
          wget https://github.com/probonopd/linuxdeployqt/releases/download/6/linuxdeployqt-6-x86_64.AppImage
          chmod +x ./linuxdeployqt-6-x86_64.AppImage
          ./linuxdeployqt-6-x86_64.AppImage --appimage-extract 
          cd AppDir
          ../squashfs-root/AppRun usr/share/applications/qv2ray.desktop -appimage -no-strip -always-overwrite
          mv ./Qv2ray*.AppImage ./Qv2ray.AppImage
      - name: gRPC - Uploading artifact
        uses: actions/upload-artifact@master
        with:
          name: Qv2ray.linux-gRPC.AppImage
          path: build/AppDir/Qv2ray.AppImage
      - name: gRPC - Upload binaries to release
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/AppDir/Qv2ray.AppImage
          asset_name: Qv2ray-${{ github.ref }}-linux.gRPC.AppImage
          tag: ${{ github.ref }}
          overwrite: true
